import { z } from "zod";
export declare const sendEmailSchema: z.ZodObject<{
    to: z.ZodArray<z.ZodObject<{
        email: z.ZodEmail;
        name: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>>;
    from: z.ZodObject<{
        email: z.ZodEmail;
        name: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>;
    subject: z.ZodString;
    html: z.ZodOptional<z.ZodString>;
    text: z.ZodOptional<z.ZodString>;
    cc: z.ZodOptional<z.ZodArray<z.ZodObject<{
        email: z.ZodEmail;
        name: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>>>;
    bcc: z.ZodOptional<z.ZodArray<z.ZodObject<{
        email: z.ZodEmail;
        name: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>>>;
    replyTo: z.ZodObject<{
        email: z.ZodEmail;
        name: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>;
    tags: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        value: z.ZodString;
    }, z.core.$strip>>>;
    attachments: z.ZodOptional<z.ZodArray<z.ZodObject<{
        url: z.ZodOptional<z.ZodString>;
        filename: z.ZodString;
        content: z.ZodUnion<readonly [z.ZodString, z.ZodCustom<Buffer<ArrayBufferLike>, Buffer<ArrayBufferLike>>]>;
        contentType: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>>>;
}, z.core.$strip>;
export declare const bulkSendEmailSchema: z.ZodObject<{
    emails: z.ZodArray<z.ZodObject<{
        to: z.ZodArray<z.ZodObject<{
            email: z.ZodEmail;
            name: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>;
        from: z.ZodObject<{
            email: z.ZodEmail;
            name: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>;
        subject: z.ZodString;
        html: z.ZodOptional<z.ZodString>;
        text: z.ZodOptional<z.ZodString>;
        cc: z.ZodOptional<z.ZodArray<z.ZodObject<{
            email: z.ZodEmail;
            name: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>>;
        bcc: z.ZodOptional<z.ZodArray<z.ZodObject<{
            email: z.ZodEmail;
            name: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>>;
        replyTo: z.ZodObject<{
            email: z.ZodEmail;
            name: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>;
        tags: z.ZodOptional<z.ZodArray<z.ZodObject<{
            name: z.ZodString;
            value: z.ZodString;
        }, z.core.$strip>>>;
        attachments: z.ZodOptional<z.ZodArray<z.ZodObject<{
            url: z.ZodOptional<z.ZodString>;
            filename: z.ZodString;
            content: z.ZodUnion<readonly [z.ZodString, z.ZodCustom<Buffer<ArrayBufferLike>, Buffer<ArrayBufferLike>>]>;
            contentType: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const webhookEventSchema: z.ZodObject<{
    type: z.ZodEnum<{
        "email.sent": "email.sent";
        "email.delivered": "email.delivered";
        "email.delivery_delayed": "email.delivery_delayed";
        "email.complained": "email.complained";
        "email.bounced": "email.bounced";
        "email.opened": "email.opened";
        "email.clicked": "email.clicked";
        "email.failed": "email.failed";
    }>;
    created_at: z.ZodString;
    data: z.ZodObject<{
        id: z.ZodString;
        from: z.ZodString;
        to: z.ZodArray<z.ZodString>;
        subject: z.ZodString;
        created_at: z.ZodString;
        email_id: z.ZodOptional<z.ZodString>;
        bounce_type: z.ZodOptional<z.ZodString>;
        complaint_type: z.ZodOptional<z.ZodString>;
        click: z.ZodOptional<z.ZodObject<{
            ipAddress: z.ZodString;
            link: z.ZodString;
            timestamp: z.ZodString;
            userAgent: z.ZodString;
        }, z.core.$strip>>;
    }, z.core.$strip>;
}, z.core.$strip>;
